
Project_38.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000004ce  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000009e  00800060  000004ce  00000542  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000c  008000fe  0000056c  000005e0  2**0
                  ALLOC
  3 .debug_aranges 00000020  00000000  00000000  000005e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 00000070  00000000  00000000  00000600  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000082a  00000000  00000000  00000670  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000229  00000000  00000000  00000e9a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000590  00000000  00000000  000010c3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000080  00000000  00000000  00001654  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000135  00000000  00000000  000016d4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000631  00000000  00000000  00001809  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000a8  00000000  00000000  00001e3a  2**0
                  CONTENTS, READONLY, DEBUGGING
Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ee ec       	ldi	r30, 0xCE	; 206
  68:	f4 e0       	ldi	r31, 0x04	; 4
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	ae 3f       	cpi	r26, 0xFE	; 254
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
  76:	11 e0       	ldi	r17, 0x01	; 1
  78:	ae ef       	ldi	r26, 0xFE	; 254
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	aa 30       	cpi	r26, 0x0A	; 10
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 3a 01 	call	0x274	; 0x274 <main>
  8a:	0c 94 65 02 	jmp	0x4ca	; 0x4ca <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <int_tx>:
	 return 0;
}


void int_tx(int data)
{
  92:	af 92       	push	r10
  94:	bf 92       	push	r11
  96:	cf 92       	push	r12
  98:	df 92       	push	r13
  9a:	ef 92       	push	r14
  9c:	ff 92       	push	r15
  9e:	0f 93       	push	r16
  a0:	1f 93       	push	r17
  a2:	df 93       	push	r29
  a4:	cf 93       	push	r28
  a6:	cd b7       	in	r28, 0x3d	; 61
  a8:	de b7       	in	r29, 0x3e	; 62
  aa:	2a 97       	sbiw	r28, 0x0a	; 10
  ac:	0f b6       	in	r0, 0x3f	; 63
  ae:	f8 94       	cli
  b0:	de bf       	out	0x3e, r29	; 62
  b2:	0f be       	out	0x3f, r0	; 63
  b4:	cd bf       	out	0x3d, r28	; 61
  b6:	8c 01       	movw	r16, r24
  int wc=0;
  unsigned char ulta[5];
  unsigned char sidha[5];
  int r=0,j1=0,i1=0;
  if(data==0)
  b8:	00 97       	sbiw	r24, 0x00	; 0
  ba:	29 f4       	brne	.+10     	; 0xc6 <int_tx+0x34>
 while((UCSRA&0x80)==0);
 return UDR;
}
void usart_send(char send)
{
  while((UCSRA&0x20)==0);
  bc:	5d 9b       	sbis	0x0b, 5	; 11
  be:	fe cf       	rjmp	.-4      	; 0xbc <int_tx+0x2a>
  UDR=send;
  c0:	80 e3       	ldi	r24, 0x30	; 48
  c2:	8c b9       	out	0x0c, r24	; 12
  c4:	49 c0       	rjmp	.+146    	; 0x158 <int_tx+0xc6>
  c6:	ee 24       	eor	r14, r14
  c8:	ff 24       	eor	r15, r15

 while(data!=0)
 {
    r=data%10;
    data=data/10;
    ulta[i1]=r+48;
  ca:	5e 01       	movw	r10, r28
  cc:	08 94       	sec
  ce:	a1 1c       	adc	r10, r1
  d0:	b1 1c       	adc	r11, r1
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  d2:	88 ec       	ldi	r24, 0xC8	; 200
  d4:	c8 2e       	mov	r12, r24
  d6:	d1 2c       	mov	r13, r1
    usart_send(48);
  }

 while(data!=0)
 {
    r=data%10;
  d8:	c8 01       	movw	r24, r16
  da:	6a e0       	ldi	r22, 0x0A	; 10
  dc:	70 e0       	ldi	r23, 0x00	; 0
  de:	0e 94 3e 02 	call	0x47c	; 0x47c <__divmodhi4>
  e2:	28 2f       	mov	r18, r24
    data=data/10;
  e4:	c8 01       	movw	r24, r16
  e6:	6a e0       	ldi	r22, 0x0A	; 10
  e8:	70 e0       	ldi	r23, 0x00	; 0
  ea:	0e 94 3e 02 	call	0x47c	; 0x47c <__divmodhi4>
  ee:	ab 01       	movw	r20, r22
  f0:	8b 01       	movw	r16, r22
    ulta[i1]=r+48;
  f2:	f5 01       	movw	r30, r10
  f4:	ee 0d       	add	r30, r14
  f6:	ff 1d       	adc	r31, r15
  f8:	20 5d       	subi	r18, 0xD0	; 208
  fa:	20 83       	st	Z, r18
    i1++;
  fc:	08 94       	sec
  fe:	e1 1c       	adc	r14, r1
 100:	f1 1c       	adc	r15, r1
 102:	88 ee       	ldi	r24, 0xE8	; 232
 104:	93 e0       	ldi	r25, 0x03	; 3
 106:	f6 01       	movw	r30, r12
 108:	31 97       	sbiw	r30, 0x01	; 1
 10a:	f1 f7       	brne	.-4      	; 0x108 <int_tx+0x76>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 10c:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 10e:	d9 f7       	brne	.-10     	; 0x106 <int_tx+0x74>
  if(data==0)
  {
    usart_send(48);
  }

 while(data!=0)
 110:	45 2b       	or	r20, r21
 112:	11 f7       	brne	.-60     	; 0xd8 <int_tx+0x46>
 114:	9e 01       	movw	r18, r28
 116:	2e 0d       	add	r18, r14
 118:	3f 1d       	adc	r19, r15
 11a:	a0 e0       	ldi	r26, 0x00	; 0
 11c:	b0 e0       	ldi	r27, 0x00	; 0
 11e:	ae 01       	movw	r20, r28
 120:	4a 5f       	subi	r20, 0xFA	; 250
 122:	5f 4f       	sbci	r21, 0xFF	; 255
 124:	0a c0       	rjmp	.+20     	; 0x13a <int_tx+0xa8>
 }
  if(wc==1)
  {
  for(j1=0;j1<=(i1-1);j1++)
  {
    sidha[j1]=ulta[(i1-1)-j1];
 126:	ba 01       	movw	r22, r20
 128:	6a 0f       	add	r22, r26
 12a:	7b 1f       	adc	r23, r27
 12c:	f9 01       	movw	r30, r18
 12e:	80 81       	ld	r24, Z
 130:	fb 01       	movw	r30, r22
 132:	80 83       	st	Z, r24
    _delay_ms(100);
    wc=1;
 }
  if(wc==1)
  {
  for(j1=0;j1<=(i1-1);j1++)
 134:	11 96       	adiw	r26, 0x01	; 1
 136:	21 50       	subi	r18, 0x01	; 1
 138:	30 40       	sbci	r19, 0x00	; 0
 13a:	ae 15       	cp	r26, r14
 13c:	bf 05       	cpc	r27, r15
 13e:	9c f3       	brlt	.-26     	; 0x126 <int_tx+0x94>
  {
    sidha[j1]=ulta[(i1-1)-j1];
  }
   sidha[j1]='\0';
 140:	a4 0f       	add	r26, r20
 142:	b5 1f       	adc	r27, r21
 144:	1c 92       	st	X, r1
 146:	fa 01       	movw	r30, r20
 148:	04 c0       	rjmp	.+8      	; 0x152 <int_tx+0xc0>
 while((UCSRA&0x80)==0);
 return UDR;
}
void usart_send(char send)
{
  while((UCSRA&0x20)==0);
 14a:	5d 9b       	sbis	0x0b, 5	; 11
 14c:	fe cf       	rjmp	.-4      	; 0x14a <int_tx+0xb8>
  UDR=send;
 14e:	8c b9       	out	0x0c, r24	; 12
 150:	31 96       	adiw	r30, 0x01	; 1
}
void usart_string(unsigned char *a)
{
    int i2=0;
	while(a[i2]!='\0')
 152:	80 81       	ld	r24, Z
 154:	88 23       	and	r24, r24
 156:	c9 f7       	brne	.-14     	; 0x14a <int_tx+0xb8>
    sidha[j1]=ulta[(i1-1)-j1];
  }
   sidha[j1]='\0';
   usart_string(sidha);wc=0;
   }
}
 158:	2a 96       	adiw	r28, 0x0a	; 10
 15a:	0f b6       	in	r0, 0x3f	; 63
 15c:	f8 94       	cli
 15e:	de bf       	out	0x3e, r29	; 62
 160:	0f be       	out	0x3f, r0	; 63
 162:	cd bf       	out	0x3d, r28	; 61
 164:	cf 91       	pop	r28
 166:	df 91       	pop	r29
 168:	1f 91       	pop	r17
 16a:	0f 91       	pop	r16
 16c:	ff 90       	pop	r15
 16e:	ef 90       	pop	r14
 170:	df 90       	pop	r13
 172:	cf 90       	pop	r12
 174:	bf 90       	pop	r11
 176:	af 90       	pop	r10
 178:	08 95       	ret

0000017a <usart_init>:
//////////////////////////////


void usart_init()
{
 17a:	83 e3       	ldi	r24, 0x33	; 51
 17c:	89 b9       	out	0x09, r24	; 9
 UBRRL=51;
 UBRRH=0;
 17e:	10 bc       	out	0x20, r1	; 32
 UCSRB=0x18;
 180:	88 e1       	ldi	r24, 0x18	; 24
 182:	8a b9       	out	0x0a, r24	; 10
 UCSRC=0x8e;
 184:	8e e8       	ldi	r24, 0x8E	; 142
 186:	80 bd       	out	0x20, r24	; 32
}
 188:	08 95       	ret

0000018a <usart_rec>:
char usart_rec()
{
 18a:	5f 9b       	sbis	0x0b, 7	; 11
 18c:	fe cf       	rjmp	.-4      	; 0x18a <usart_rec>
 while((UCSRA&0x80)==0);
 return UDR;
 18e:	8c b1       	in	r24, 0x0c	; 12
}
 190:	08 95       	ret

00000192 <usart_send>:
void usart_send(char send)
{
 192:	5d 9b       	sbis	0x0b, 5	; 11
 194:	fe cf       	rjmp	.-4      	; 0x192 <usart_send>
  while((UCSRA&0x20)==0);
  UDR=send;
 196:	8c b9       	out	0x0c, r24	; 12
}
 198:	08 95       	ret

0000019a <usart_string>:
void usart_string(unsigned char *a)
{
 19a:	fc 01       	movw	r30, r24
 19c:	04 c0       	rjmp	.+8      	; 0x1a6 <usart_string+0xc>
 while((UCSRA&0x80)==0);
 return UDR;
}
void usart_send(char send)
{
  while((UCSRA&0x20)==0);
 19e:	5d 9b       	sbis	0x0b, 5	; 11
 1a0:	fe cf       	rjmp	.-4      	; 0x19e <usart_string+0x4>
  UDR=send;
 1a2:	8c b9       	out	0x0c, r24	; 12
 1a4:	31 96       	adiw	r30, 0x01	; 1
}
void usart_string(unsigned char *a)
{
    int i2=0;
	while(a[i2]!='\0')
 1a6:	80 81       	ld	r24, Z
 1a8:	88 23       	and	r24, r24
 1aa:	c9 f7       	brne	.-14     	; 0x19e <usart_string+0x4>
		usart_send(a[i2]);
		i2++;
	}
	

}
 1ac:	08 95       	ret

000001ae <msg_send>:


void msg_send(char num,char msg)
{
 1ae:	48 2f       	mov	r20, r24
 1b0:	e0 e6       	ldi	r30, 0x60	; 96
 1b2:	f0 e0       	ldi	r31, 0x00	; 0
 1b4:	04 c0       	rjmp	.+8      	; 0x1be <msg_send+0x10>
 while((UCSRA&0x80)==0);
 return UDR;
}
void usart_send(char send)
{
  while((UCSRA&0x20)==0);
 1b6:	5d 9b       	sbis	0x0b, 5	; 11
 1b8:	fe cf       	rjmp	.-4      	; 0x1b6 <msg_send+0x8>
  UDR=send;
 1ba:	8c b9       	out	0x0c, r24	; 12
 1bc:	31 96       	adiw	r30, 0x01	; 1
}
void usart_string(unsigned char *a)
{
    int i2=0;
	while(a[i2]!='\0')
 1be:	80 81       	ld	r24, Z
 1c0:	88 23       	and	r24, r24
 1c2:	c9 f7       	brne	.-14     	; 0x1b6 <msg_send+0x8>
 while((UCSRA&0x80)==0);
 return UDR;
}
void usart_send(char send)
{
  while((UCSRA&0x20)==0);
 1c4:	5d 9b       	sbis	0x0b, 5	; 11
 1c6:	fe cf       	rjmp	.-4      	; 0x1c4 <msg_send+0x16>
  UDR=send;
 1c8:	8d e0       	ldi	r24, 0x0D	; 13
 1ca:	8c b9       	out	0x0c, r24	; 12
 1cc:	80 e1       	ldi	r24, 0x10	; 16
 1ce:	97 e2       	ldi	r25, 0x27	; 39
 1d0:	28 ec       	ldi	r18, 0xC8	; 200
 1d2:	30 e0       	ldi	r19, 0x00	; 0
 1d4:	f9 01       	movw	r30, r18
 1d6:	31 97       	sbiw	r30, 0x01	; 1
 1d8:	f1 f7       	brne	.-4      	; 0x1d6 <msg_send+0x28>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 1da:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 1dc:	d9 f7       	brne	.-10     	; 0x1d4 <msg_send+0x26>
 1de:	ea e6       	ldi	r30, 0x6A	; 106
 1e0:	f0 e0       	ldi	r31, 0x00	; 0
 1e2:	04 c0       	rjmp	.+8      	; 0x1ec <msg_send+0x3e>
 while((UCSRA&0x80)==0);
 return UDR;
}
void usart_send(char send)
{
  while((UCSRA&0x20)==0);
 1e4:	5d 9b       	sbis	0x0b, 5	; 11
 1e6:	fe cf       	rjmp	.-4      	; 0x1e4 <msg_send+0x36>
  UDR=send;
 1e8:	8c b9       	out	0x0c, r24	; 12
 1ea:	31 96       	adiw	r30, 0x01	; 1
}
void usart_string(unsigned char *a)
{
    int i2=0;
	while(a[i2]!='\0')
 1ec:	80 81       	ld	r24, Z
 1ee:	88 23       	and	r24, r24
 1f0:	c9 f7       	brne	.-14     	; 0x1e4 <msg_send+0x36>
 while((UCSRA&0x80)==0);
 return UDR;
}
void usart_send(char send)
{
  while((UCSRA&0x20)==0);
 1f2:	5d 9b       	sbis	0x0b, 5	; 11
 1f4:	fe cf       	rjmp	.-4      	; 0x1f2 <msg_send+0x44>
  UDR=send;
 1f6:	82 e2       	ldi	r24, 0x22	; 34
 1f8:	8c b9       	out	0x0c, r24	; 12
 1fa:	20 e0       	ldi	r18, 0x00	; 0
 1fc:	30 e0       	ldi	r19, 0x00	; 0
}
void usart_string(unsigned char *a)
{
    int i2=0;
	while(a[i2]!='\0')
 1fe:	84 2f       	mov	r24, r20
 200:	90 e0       	ldi	r25, 0x00	; 0
 202:	05 c0       	rjmp	.+10     	; 0x20e <msg_send+0x60>
 while((UCSRA&0x80)==0);
 return UDR;
}
void usart_send(char send)
{
  while((UCSRA&0x20)==0);
 204:	5d 9b       	sbis	0x0b, 5	; 11
 206:	fe cf       	rjmp	.-4      	; 0x204 <msg_send+0x56>
  UDR=send;
 208:	ec b9       	out	0x0c, r30	; 12
{
    int i2=0;
	while(a[i2]!='\0')
	{
		usart_send(a[i2]);
		i2++;
 20a:	2f 5f       	subi	r18, 0xFF	; 255
 20c:	3f 4f       	sbci	r19, 0xFF	; 255
  UDR=send;
}
void usart_string(unsigned char *a)
{
    int i2=0;
	while(a[i2]!='\0')
 20e:	f9 01       	movw	r30, r18
 210:	e8 0f       	add	r30, r24
 212:	f9 1f       	adc	r31, r25
 214:	e0 81       	ld	r30, Z
 216:	ee 23       	and	r30, r30
 218:	a9 f7       	brne	.-22     	; 0x204 <msg_send+0x56>
 while((UCSRA&0x80)==0);
 return UDR;
}
void usart_send(char send)
{
  while((UCSRA&0x20)==0);
 21a:	5d 9b       	sbis	0x0b, 5	; 11
 21c:	fe cf       	rjmp	.-4      	; 0x21a <msg_send+0x6c>
  UDR=send;
 21e:	82 e2       	ldi	r24, 0x22	; 34
 220:	8c b9       	out	0x0c, r24	; 12
 while((UCSRA&0x80)==0);
 return UDR;
}
void usart_send(char send)
{
  while((UCSRA&0x20)==0);
 222:	5d 9b       	sbis	0x0b, 5	; 11
 224:	fe cf       	rjmp	.-4      	; 0x222 <msg_send+0x74>
  UDR=send;
 226:	8d e0       	ldi	r24, 0x0D	; 13
 228:	8c b9       	out	0x0c, r24	; 12
 22a:	80 e1       	ldi	r24, 0x10	; 16
 22c:	97 e2       	ldi	r25, 0x27	; 39
 22e:	28 ec       	ldi	r18, 0xC8	; 200
 230:	30 e0       	ldi	r19, 0x00	; 0
 232:	f9 01       	movw	r30, r18
 234:	31 97       	sbiw	r30, 0x01	; 1
 236:	f1 f7       	brne	.-4      	; 0x234 <msg_send+0x86>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 238:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 23a:	d9 f7       	brne	.-10     	; 0x232 <msg_send+0x84>
 23c:	80 e0       	ldi	r24, 0x00	; 0
 23e:	90 e0       	ldi	r25, 0x00	; 0
}
void usart_string(unsigned char *a)
{
    int i2=0;
	while(a[i2]!='\0')
 240:	70 e0       	ldi	r23, 0x00	; 0
 242:	04 c0       	rjmp	.+8      	; 0x24c <msg_send+0x9e>
 while((UCSRA&0x80)==0);
 return UDR;
}
void usart_send(char send)
{
  while((UCSRA&0x20)==0);
 244:	5d 9b       	sbis	0x0b, 5	; 11
 246:	fe cf       	rjmp	.-4      	; 0x244 <msg_send+0x96>
  UDR=send;
 248:	ec b9       	out	0x0c, r30	; 12
{
    int i2=0;
	while(a[i2]!='\0')
	{
		usart_send(a[i2]);
		i2++;
 24a:	01 96       	adiw	r24, 0x01	; 1
  UDR=send;
}
void usart_string(unsigned char *a)
{
    int i2=0;
	while(a[i2]!='\0')
 24c:	fc 01       	movw	r30, r24
 24e:	e6 0f       	add	r30, r22
 250:	f7 1f       	adc	r31, r23
 252:	e0 81       	ld	r30, Z
 254:	ee 23       	and	r30, r30
 256:	b1 f7       	brne	.-20     	; 0x244 <msg_send+0x96>
 while((UCSRA&0x80)==0);
 return UDR;
}
void usart_send(char send)
{
  while((UCSRA&0x20)==0);
 258:	5d 9b       	sbis	0x0b, 5	; 11
 25a:	fe cf       	rjmp	.-4      	; 0x258 <msg_send+0xaa>
  UDR=send;
 25c:	8a e1       	ldi	r24, 0x1A	; 26
 25e:	8c b9       	out	0x0c, r24	; 12
 260:	80 e1       	ldi	r24, 0x10	; 16
 262:	97 e2       	ldi	r25, 0x27	; 39
 264:	28 ec       	ldi	r18, 0xC8	; 200
 266:	30 e0       	ldi	r19, 0x00	; 0
 268:	f9 01       	movw	r30, r18
 26a:	31 97       	sbiw	r30, 0x01	; 1
 26c:	f1 f7       	brne	.-4      	; 0x26a <msg_send+0xbc>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 26e:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 270:	d9 f7       	brne	.-10     	; 0x268 <msg_send+0xba>
  usart_send(0x0d);
  _delay_ms(1000);
  usart_string(msg);
  usart_send(0x1A);
  _delay_ms(1000);
}
 272:	08 95       	ret

00000274 <main>:
void int_tx(int data);
void msg_send(char num,char msg);


int main()
{
 274:	2f 92       	push	r2
 276:	3f 92       	push	r3
 278:	4f 92       	push	r4
 27a:	5f 92       	push	r5
 27c:	6f 92       	push	r6
 27e:	7f 92       	push	r7
 280:	8f 92       	push	r8
 282:	9f 92       	push	r9
 284:	af 92       	push	r10
 286:	bf 92       	push	r11
 288:	cf 92       	push	r12
 28a:	df 92       	push	r13
 28c:	ef 92       	push	r14
 28e:	ff 92       	push	r15
 290:	0f 93       	push	r16
 292:	1f 93       	push	r17
 294:	df 93       	push	r29
 296:	cf 93       	push	r28
 298:	cd b7       	in	r28, 0x3d	; 61
 29a:	de b7       	in	r29, 0x3e	; 62
 29c:	e0 97       	sbiw	r28, 0x30	; 48
 29e:	0f b6       	in	r0, 0x3f	; 63
 2a0:	f8 94       	cli
 2a2:	de bf       	out	0x3e, r29	; 62
 2a4:	0f be       	out	0x3f, r0	; 63
 2a6:	cd bf       	out	0x3d, r28	; 61
//////////////////////////////


void usart_init()
{
 UBRRL=51;
 2a8:	83 e3       	ldi	r24, 0x33	; 51
 2aa:	89 b9       	out	0x09, r24	; 9
 UBRRH=0;
 2ac:	10 bc       	out	0x20, r1	; 32
 UCSRB=0x18;
 2ae:	88 e1       	ldi	r24, 0x18	; 24
 2b0:	8a b9       	out	0x0a, r24	; 10
 UCSRC=0x8e;
 2b2:	8e e8       	ldi	r24, 0x8E	; 142
 2b4:	80 bd       	out	0x20, r24	; 32
 2b6:	88 ee       	ldi	r24, 0xE8	; 232
 2b8:	93 e0       	ldi	r25, 0x03	; 3
 2ba:	28 ec       	ldi	r18, 0xC8	; 200
 2bc:	30 e0       	ldi	r19, 0x00	; 0
 2be:	f9 01       	movw	r30, r18
 2c0:	31 97       	sbiw	r30, 0x01	; 1
 2c2:	f1 f7       	brne	.-4      	; 0x2c0 <main+0x4c>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 2c4:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 2c6:	d9 f7       	brne	.-10     	; 0x2be <main+0x4a>
	_delay_ms(100);

   

   static char a[12];
   char b[12]="3B002AF89D74";
 2c8:	de 01       	movw	r26, r28
 2ca:	11 96       	adiw	r26, 0x01	; 1
 2cc:	ea ec       	ldi	r30, 0xCA	; 202
 2ce:	f0 e0       	ldi	r31, 0x00	; 0
 2d0:	8c e0       	ldi	r24, 0x0C	; 12
 2d2:	01 90       	ld	r0, Z+
 2d4:	0d 92       	st	X+, r0
 2d6:	81 50       	subi	r24, 0x01	; 1
 2d8:	e1 f7       	brne	.-8      	; 0x2d2 <main+0x5e>
   char c[12]="1800895BF43E";
 2da:	de 01       	movw	r26, r28
 2dc:	1d 96       	adiw	r26, 0x0d	; 13
 2de:	e7 ed       	ldi	r30, 0xD7	; 215
 2e0:	f0 e0       	ldi	r31, 0x00	; 0
 2e2:	8c e0       	ldi	r24, 0x0C	; 12
 2e4:	01 90       	ld	r0, Z+
 2e6:	0d 92       	st	X+, r0
 2e8:	81 50       	subi	r24, 0x01	; 1
 2ea:	e1 f7       	brne	.-8      	; 0x2e4 <main+0x70>
   char d[12]="1800893F8D23";
 2ec:	de 01       	movw	r26, r28
 2ee:	59 96       	adiw	r26, 0x19	; 25
 2f0:	e4 ee       	ldi	r30, 0xE4	; 228
 2f2:	f0 e0       	ldi	r31, 0x00	; 0
 2f4:	8c e0       	ldi	r24, 0x0C	; 12
 2f6:	01 90       	ld	r0, Z+
 2f8:	0d 92       	st	X+, r0
 2fa:	81 50       	subi	r24, 0x01	; 1
 2fc:	e1 f7       	brne	.-8      	; 0x2f6 <main+0x82>
   char e[12]="18008919EA62";
 2fe:	de 01       	movw	r26, r28
 300:	95 96       	adiw	r26, 0x25	; 37
 302:	e1 ef       	ldi	r30, 0xF1	; 241
 304:	f0 e0       	ldi	r31, 0x00	; 0
 306:	8c e0       	ldi	r24, 0x0C	; 12
 308:	01 90       	ld	r0, Z+
 30a:	0d 92       	st	X+, r0
 30c:	81 50       	subi	r24, 0x01	; 1
 30e:	e1 f7       	brne	.-8      	; 0x308 <main+0x94>
 310:	20 e0       	ldi	r18, 0x00	; 0
 312:	30 e0       	ldi	r19, 0x00	; 0
	  {count1++;}
	  if(a[j]==c[j])
	  {count2++;}
	  if(a[j]==d[j])
	  {count3++;}
	  if(a[j]==e[j])
 314:	f5 e2       	ldi	r31, 0x25	; 37
 316:	2f 2e       	mov	r2, r31
 318:	31 2c       	mov	r3, r1
 31a:	2c 0e       	add	r2, r28
 31c:	3d 1e       	adc	r3, r29
		 count3=0;count4=0;

		}
		else if(count4==12)
	    {
	       msg_send("8946952707","Your Ward Reached at School");
 31e:	e3 e7       	ldi	r30, 0x73	; 115
 320:	ce 2e       	mov	r12, r30
 322:	e0 e0       	ldi	r30, 0x00	; 0
 324:	de 2e       	mov	r13, r30
 326:	7f eb       	ldi	r23, 0xBF	; 191
 328:	47 2e       	mov	r4, r23
 32a:	70 e0       	ldi	r23, 0x00	; 0
 32c:	57 2e       	mov	r5, r23
 32e:	68 ec       	ldi	r22, 0xC8	; 200
 330:	e6 2e       	mov	r14, r22
 332:	f1 2c       	mov	r15, r1
		 count3=0;count4=0;

		}
		else if(count3==12)
	    {
	      msg_send("9509880092","Your Ward Reached at School");
 334:	55 ea       	ldi	r21, 0xA5	; 165
 336:	65 2e       	mov	r6, r21
 338:	50 e0       	ldi	r21, 0x00	; 0
 33a:	75 2e       	mov	r7, r21
		count3=0;count4=0;

		}
		else if(count2==12)
	    {
	       msg_send("9529698354","Your Ward Reached at School");
 33c:	4a e9       	ldi	r20, 0x9A	; 154
 33e:	84 2e       	mov	r8, r20
 340:	40 e0       	ldi	r20, 0x00	; 0
 342:	94 2e       	mov	r9, r20
	  }
	 

	  if(count1==12)
	  {
	     msg_send("7877876606","Your Ward Reached at School");
 344:	9f e8       	ldi	r25, 0x8F	; 143
 346:	a9 2e       	mov	r10, r25
 348:	90 e0       	ldi	r25, 0x00	; 0
 34a:	b9 2e       	mov	r11, r25
 34c:	0c c0       	rjmp	.+24     	; 0x366 <main+0xf2>
 UCSRB=0x18;
 UCSRC=0x8e;
}
char usart_rec()
{
 while((UCSRA&0x80)==0);
 34e:	5f 9b       	sbis	0x0b, 7	; 11
 350:	fe cf       	rjmp	.-4      	; 0x34e <main+0xda>
 return UDR;
 352:	8c b1       	in	r24, 0x0c	; 12
   int count2=0;
   int count3=0;
   int count4=0;
      for(int i=0;i<=11;i++)
	  {
	    a[i]=usart_rec();
 354:	f9 01       	movw	r30, r18
 356:	e2 50       	subi	r30, 0x02	; 2
 358:	ff 4f       	sbci	r31, 0xFF	; 255
 35a:	80 83       	st	Z, r24
   
   int count1=0;
   int count2=0;
   int count3=0;
   int count4=0;
      for(int i=0;i<=11;i++)
 35c:	2f 5f       	subi	r18, 0xFF	; 255
 35e:	3f 4f       	sbci	r19, 0xFF	; 255
 360:	02 c0       	rjmp	.+4      	; 0x366 <main+0xf2>
 362:	20 e0       	ldi	r18, 0x00	; 0
 364:	30 e0       	ldi	r19, 0x00	; 0
 366:	2c 30       	cpi	r18, 0x0C	; 12
 368:	31 05       	cpc	r19, r1
 36a:	8c f3       	brlt	.-30     	; 0x34e <main+0xda>
 36c:	40 e0       	ldi	r20, 0x00	; 0
 36e:	50 e0       	ldi	r21, 0x00	; 0
 370:	60 e0       	ldi	r22, 0x00	; 0
 372:	70 e0       	ldi	r23, 0x00	; 0
 374:	a0 e0       	ldi	r26, 0x00	; 0
 376:	b0 e0       	ldi	r27, 0x00	; 0
 378:	00 e0       	ldi	r16, 0x00	; 0
 37a:	10 e0       	ldi	r17, 0x00	; 0
 37c:	20 e0       	ldi	r18, 0x00	; 0
 37e:	30 e0       	ldi	r19, 0x00	; 0
	
	  

	  for(int j=0;j<=11;j++)
	  {
	  if(a[j]==b[j])
 380:	f9 01       	movw	r30, r18
 382:	e2 50       	subi	r30, 0x02	; 2
 384:	ff 4f       	sbci	r31, 0xFF	; 255
 386:	90 81       	ld	r25, Z
 388:	e1 e0       	ldi	r30, 0x01	; 1
 38a:	f0 e0       	ldi	r31, 0x00	; 0
 38c:	ec 0f       	add	r30, r28
 38e:	fd 1f       	adc	r31, r29
 390:	e2 0f       	add	r30, r18
 392:	f3 1f       	adc	r31, r19
 394:	80 81       	ld	r24, Z
 396:	98 17       	cp	r25, r24
 398:	11 f4       	brne	.+4      	; 0x39e <main+0x12a>
	  {count1++;}
 39a:	4f 5f       	subi	r20, 0xFF	; 255
 39c:	5f 4f       	sbci	r21, 0xFF	; 255
	  if(a[j]==c[j])
 39e:	ed e0       	ldi	r30, 0x0D	; 13
 3a0:	f0 e0       	ldi	r31, 0x00	; 0
 3a2:	ec 0f       	add	r30, r28
 3a4:	fd 1f       	adc	r31, r29
 3a6:	e2 0f       	add	r30, r18
 3a8:	f3 1f       	adc	r31, r19
 3aa:	80 81       	ld	r24, Z
 3ac:	98 17       	cp	r25, r24
 3ae:	11 f4       	brne	.+4      	; 0x3b4 <main+0x140>
	  {count2++;}
 3b0:	6f 5f       	subi	r22, 0xFF	; 255
 3b2:	7f 4f       	sbci	r23, 0xFF	; 255
	  if(a[j]==d[j])
 3b4:	e9 e1       	ldi	r30, 0x19	; 25
 3b6:	f0 e0       	ldi	r31, 0x00	; 0
 3b8:	ec 0f       	add	r30, r28
 3ba:	fd 1f       	adc	r31, r29
 3bc:	e2 0f       	add	r30, r18
 3be:	f3 1f       	adc	r31, r19
 3c0:	80 81       	ld	r24, Z
 3c2:	98 17       	cp	r25, r24
 3c4:	09 f4       	brne	.+2      	; 0x3c8 <main+0x154>
	  {count3++;}
 3c6:	11 96       	adiw	r26, 0x01	; 1
	  if(a[j]==e[j])
 3c8:	f1 01       	movw	r30, r2
 3ca:	e2 0f       	add	r30, r18
 3cc:	f3 1f       	adc	r31, r19
 3ce:	80 81       	ld	r24, Z
 3d0:	98 17       	cp	r25, r24
 3d2:	11 f4       	brne	.+4      	; 0x3d8 <main+0x164>
	  {count4++;}
 3d4:	0f 5f       	subi	r16, 0xFF	; 255
 3d6:	1f 4f       	sbci	r17, 0xFF	; 255
		
      }
	
	  

	  for(int j=0;j<=11;j++)
 3d8:	2f 5f       	subi	r18, 0xFF	; 255
 3da:	3f 4f       	sbci	r19, 0xFF	; 255
 3dc:	2c 30       	cpi	r18, 0x0C	; 12
 3de:	31 05       	cpc	r19, r1
 3e0:	79 f6       	brne	.-98     	; 0x380 <main+0x10c>
	  if(a[j]==e[j])
	  {count4++;}
	  }
	 

	  if(count1==12)
 3e2:	4c 30       	cpi	r20, 0x0C	; 12
 3e4:	51 05       	cpc	r21, r1
 3e6:	61 f4       	brne	.+24     	; 0x400 <main+0x18c>
	  {
	     msg_send("7877876606","Your Ward Reached at School");
 3e8:	6c 2d       	mov	r22, r12
 3ea:	8a 2d       	mov	r24, r10
 3ec:	0e 94 d7 00 	call	0x1ae	; 0x1ae <msg_send>
 3f0:	80 e1       	ldi	r24, 0x10	; 16
 3f2:	97 e2       	ldi	r25, 0x27	; 39
 3f4:	f7 01       	movw	r30, r14
 3f6:	31 97       	sbiw	r30, 0x01	; 1
 3f8:	f1 f7       	brne	.-4      	; 0x3f6 <main+0x182>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 3fa:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 3fc:	d9 f7       	brne	.-10     	; 0x3f4 <main+0x180>
 3fe:	b1 cf       	rjmp	.-158    	; 0x362 <main+0xee>
   	     _delay_ms(1000);
		count1=0;count2=0;
		count3=0;count4=0;

		}
		else if(count2==12)
 400:	6c 30       	cpi	r22, 0x0C	; 12
 402:	71 05       	cpc	r23, r1
 404:	61 f4       	brne	.+24     	; 0x41e <main+0x1aa>
	    {
	       msg_send("9529698354","Your Ward Reached at School");
 406:	6c 2d       	mov	r22, r12
 408:	88 2d       	mov	r24, r8
 40a:	0e 94 d7 00 	call	0x1ae	; 0x1ae <msg_send>
 40e:	80 e1       	ldi	r24, 0x10	; 16
 410:	97 e2       	ldi	r25, 0x27	; 39
 412:	f7 01       	movw	r30, r14
 414:	31 97       	sbiw	r30, 0x01	; 1
 416:	f1 f7       	brne	.-4      	; 0x414 <main+0x1a0>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 418:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 41a:	d9 f7       	brne	.-10     	; 0x412 <main+0x19e>
 41c:	a2 cf       	rjmp	.-188    	; 0x362 <main+0xee>

		 count1=0;count2=0;
		 count3=0;count4=0;

		}
		else if(count3==12)
 41e:	1c 97       	sbiw	r26, 0x0c	; 12
 420:	61 f4       	brne	.+24     	; 0x43a <main+0x1c6>
	    {
	      msg_send("9509880092","Your Ward Reached at School");
 422:	6c 2d       	mov	r22, r12
 424:	86 2d       	mov	r24, r6
 426:	0e 94 d7 00 	call	0x1ae	; 0x1ae <msg_send>
 42a:	80 e1       	ldi	r24, 0x10	; 16
 42c:	97 e2       	ldi	r25, 0x27	; 39
 42e:	f7 01       	movw	r30, r14
 430:	31 97       	sbiw	r30, 0x01	; 1
 432:	f1 f7       	brne	.-4      	; 0x430 <main+0x1bc>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 434:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 436:	d9 f7       	brne	.-10     	; 0x42e <main+0x1ba>
 438:	94 cf       	rjmp	.-216    	; 0x362 <main+0xee>

		 count1=0;count2=0;
		 count3=0;count4=0;

		}
		else if(count4==12)
 43a:	0c 30       	cpi	r16, 0x0C	; 12
 43c:	11 05       	cpc	r17, r1
 43e:	19 f0       	breq	.+6      	; 0x446 <main+0x1d2>
 440:	e0 eb       	ldi	r30, 0xB0	; 176
 442:	f0 e0       	ldi	r31, 0x00	; 0
 444:	10 c0       	rjmp	.+32     	; 0x466 <__stack+0x7>
	    {
	       msg_send("8946952707","Your Ward Reached at School");
 446:	6c 2d       	mov	r22, r12
 448:	84 2d       	mov	r24, r4
 44a:	0e 94 d7 00 	call	0x1ae	; 0x1ae <msg_send>
 44e:	80 e1       	ldi	r24, 0x10	; 16
 450:	97 e2       	ldi	r25, 0x27	; 39
 452:	f7 01       	movw	r30, r14
 454:	31 97       	sbiw	r30, 0x01	; 1
 456:	f1 f7       	brne	.-4      	; 0x454 <main+0x1e0>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 458:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 45a:	d9 f7       	brne	.-10     	; 0x452 <main+0x1de>
 45c:	82 cf       	rjmp	.-252    	; 0x362 <main+0xee>
 while((UCSRA&0x80)==0);
 return UDR;
}
void usart_send(char send)
{
  while((UCSRA&0x20)==0);
 45e:	5d 9b       	sbis	0x0b, 5	; 11
 460:	fe cf       	rjmp	.-4      	; 0x45e <main+0x1ea>
  UDR=send;
 462:	8c b9       	out	0x0c, r24	; 12
 464:	31 96       	adiw	r30, 0x01	; 1
}
void usart_string(unsigned char *a)
{
    int i2=0;
	while(a[i2]!='\0')
 466:	80 81       	ld	r24, Z
 468:	88 23       	and	r24, r24
 46a:	c9 f7       	brne	.-14     	; 0x45e <main+0x1ea>
 46c:	84 ef       	ldi	r24, 0xF4	; 244
 46e:	91 e0       	ldi	r25, 0x01	; 1
 470:	f7 01       	movw	r30, r14
 472:	31 97       	sbiw	r30, 0x01	; 1
 474:	f1 f7       	brne	.-4      	; 0x472 <__stack+0x13>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 476:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 478:	d9 f7       	brne	.-10     	; 0x470 <__stack+0x11>
 47a:	73 cf       	rjmp	.-282    	; 0x362 <main+0xee>

0000047c <__divmodhi4>:
 47c:	97 fb       	bst	r25, 7
 47e:	09 2e       	mov	r0, r25
 480:	07 26       	eor	r0, r23
 482:	0a d0       	rcall	.+20     	; 0x498 <__divmodhi4_neg1>
 484:	77 fd       	sbrc	r23, 7
 486:	04 d0       	rcall	.+8      	; 0x490 <__divmodhi4_neg2>
 488:	0c d0       	rcall	.+24     	; 0x4a2 <__udivmodhi4>
 48a:	06 d0       	rcall	.+12     	; 0x498 <__divmodhi4_neg1>
 48c:	00 20       	and	r0, r0
 48e:	1a f4       	brpl	.+6      	; 0x496 <__divmodhi4_exit>

00000490 <__divmodhi4_neg2>:
 490:	70 95       	com	r23
 492:	61 95       	neg	r22
 494:	7f 4f       	sbci	r23, 0xFF	; 255

00000496 <__divmodhi4_exit>:
 496:	08 95       	ret

00000498 <__divmodhi4_neg1>:
 498:	f6 f7       	brtc	.-4      	; 0x496 <__divmodhi4_exit>
 49a:	90 95       	com	r25
 49c:	81 95       	neg	r24
 49e:	9f 4f       	sbci	r25, 0xFF	; 255
 4a0:	08 95       	ret

000004a2 <__udivmodhi4>:
 4a2:	aa 1b       	sub	r26, r26
 4a4:	bb 1b       	sub	r27, r27
 4a6:	51 e1       	ldi	r21, 0x11	; 17
 4a8:	07 c0       	rjmp	.+14     	; 0x4b8 <__udivmodhi4_ep>

000004aa <__udivmodhi4_loop>:
 4aa:	aa 1f       	adc	r26, r26
 4ac:	bb 1f       	adc	r27, r27
 4ae:	a6 17       	cp	r26, r22
 4b0:	b7 07       	cpc	r27, r23
 4b2:	10 f0       	brcs	.+4      	; 0x4b8 <__udivmodhi4_ep>
 4b4:	a6 1b       	sub	r26, r22
 4b6:	b7 0b       	sbc	r27, r23

000004b8 <__udivmodhi4_ep>:
 4b8:	88 1f       	adc	r24, r24
 4ba:	99 1f       	adc	r25, r25
 4bc:	5a 95       	dec	r21
 4be:	a9 f7       	brne	.-22     	; 0x4aa <__udivmodhi4_loop>
 4c0:	80 95       	com	r24
 4c2:	90 95       	com	r25
 4c4:	bc 01       	movw	r22, r24
 4c6:	cd 01       	movw	r24, r26
 4c8:	08 95       	ret

000004ca <_exit>:
 4ca:	f8 94       	cli

000004cc <__stop_program>:
 4cc:	ff cf       	rjmp	.-2      	; 0x4cc <__stop_program>
