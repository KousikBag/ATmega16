
Project_6.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000fc  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  00000150  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_pubnames 0000001b  00000000  00000000  00000170  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   0000027a  00000000  00000000  0000018b  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 000000fa  00000000  00000000  00000405  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   000001c1  00000000  00000000  000004ff  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000020  00000000  00000000  000006c0  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    000000f1  00000000  00000000  000006e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    000000a5  00000000  00000000  000007d1  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000090  00000000  00000000  00000876  2**0
                  CONTENTS, READONLY, DEBUGGING
Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ec ef       	ldi	r30, 0xFC	; 252
  68:	f0 e0       	ldi	r31, 0x00	; 0
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 36       	cpi	r26, 0x60	; 96
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 49 00 	call	0x92	; 0x92 <main>
  8a:	0c 94 7c 00 	jmp	0xf8	; 0xf8 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__heap_end>

00000092 <main>:

#define F_CPU 8000000UL
#include<avr/io.h>
#include<util/delay.h>
int main()
{
  92:	14 ba       	out	0x14, r1	; 20
  DDRC=0x00;
  DDRB=0xFF;
  94:	8f ef       	ldi	r24, 0xFF	; 255
  96:	87 bb       	out	0x17, r24	; 23
  int i;
  while(1)
  {
    if(PINC==0b00000000)
	{
	  PORTB=0b00000101;
  98:	75 e0       	ldi	r23, 0x05	; 5
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
  9a:	40 ea       	ldi	r20, 0xA0	; 160
	 }
	 else 
	 {
	 for(i=0;i<=10000;i++)
	  {
	   PORTB=0b00001010;
  9c:	30 e5       	ldi	r19, 0x50	; 80
  9e:	6a e0       	ldi	r22, 0x0A	; 10
	   PORTB=0;
	   _delay_us(30);
	  }
	  for(i=0;i<=9000;i++)
	  {
	   PORTB=0b00000001;
  a0:	51 e0       	ldi	r21, 0x01	; 1
  DDRC=0x00;
  DDRB=0xFF;
  int i;
  while(1)
  {
    if(PINC==0b00000000)
  a2:	83 b3       	in	r24, 0x13	; 19
  a4:	88 23       	and	r24, r24
  a6:	49 f4       	brne	.+18     	; 0xba <main+0x28>
	{
	  PORTB=0b00000101;
  a8:	78 bb       	out	0x18, r23	; 24
  aa:	84 2f       	mov	r24, r20
  ac:	8a 95       	dec	r24
  ae:	f1 f7       	brne	.-4      	; 0xac <main+0x1a>
	  _delay_us(60);
	  PORTB=0;
  b0:	18 ba       	out	0x18, r1	; 24
  b2:	83 2f       	mov	r24, r19
  b4:	8a 95       	dec	r24
  b6:	f1 f7       	brne	.-4      	; 0xb4 <main+0x22>
  b8:	f4 cf       	rjmp	.-24     	; 0xa2 <main+0x10>
  ba:	80 e0       	ldi	r24, 0x00	; 0
  bc:	90 e0       	ldi	r25, 0x00	; 0
	 }
	 else 
	 {
	 for(i=0;i<=10000;i++)
	  {
	   PORTB=0b00001010;
  be:	68 bb       	out	0x18, r22	; 24
  c0:	24 2f       	mov	r18, r20
  c2:	2a 95       	dec	r18
  c4:	f1 f7       	brne	.-4      	; 0xc2 <main+0x30>
	   _delay_us(60);
	   PORTB=0;
  c6:	18 ba       	out	0x18, r1	; 24
  c8:	23 2f       	mov	r18, r19
  ca:	2a 95       	dec	r18
  cc:	f1 f7       	brne	.-4      	; 0xca <main+0x38>
	  PORTB=0;
	  _delay_us(30);
	 }
	 else 
	 {
	 for(i=0;i<=10000;i++)
  ce:	01 96       	adiw	r24, 0x01	; 1
  d0:	27 e2       	ldi	r18, 0x27	; 39
  d2:	81 31       	cpi	r24, 0x11	; 17
  d4:	92 07       	cpc	r25, r18
  d6:	99 f7       	brne	.-26     	; 0xbe <main+0x2c>
  d8:	80 e0       	ldi	r24, 0x00	; 0
  da:	90 e0       	ldi	r25, 0x00	; 0
	   PORTB=0;
	   _delay_us(30);
	  }
	  for(i=0;i<=9000;i++)
	  {
	   PORTB=0b00000001;
  dc:	58 bb       	out	0x18, r21	; 24
  de:	24 2f       	mov	r18, r20
  e0:	2a 95       	dec	r18
  e2:	f1 f7       	brne	.-4      	; 0xe0 <main+0x4e>
	   _delay_us(60);
	   PORTB=0;
  e4:	18 ba       	out	0x18, r1	; 24
  e6:	23 2f       	mov	r18, r19
  e8:	2a 95       	dec	r18
  ea:	f1 f7       	brne	.-4      	; 0xe8 <main+0x56>
	   PORTB=0b00001010;
	   _delay_us(60);
	   PORTB=0;
	   _delay_us(30);
	  }
	  for(i=0;i<=9000;i++)
  ec:	01 96       	adiw	r24, 0x01	; 1
  ee:	23 e2       	ldi	r18, 0x23	; 35
  f0:	89 32       	cpi	r24, 0x29	; 41
  f2:	92 07       	cpc	r25, r18
  f4:	99 f7       	brne	.-26     	; 0xdc <main+0x4a>
  f6:	d5 cf       	rjmp	.-86     	; 0xa2 <main+0x10>

000000f8 <_exit>:
  f8:	f8 94       	cli

000000fa <__stop_program>:
  fa:	ff cf       	rjmp	.-2      	; 0xfa <__stop_program>
